{"version":3,"sources":["components/Cards/Cards.module.css","shared/Spinner/Spinner.js","components/Cards/Cards.jsx","api/index.js","components/Chart/Chart.jsx","components/CountryPicker/CountryPicker.jsx","App.js","index.js","App.module.css","components/Chart/Chart.module.css","components/CountryPicker/CountryPicker.module.css","images/image.png"],"names":["module","exports","Spinner","className","styles","Loader","Cards","data","confirmed","recovered","deaths","lastUpdate","container","Grid","spacing","justify","item","component","Card","xs","md","cx","card","infected","CardContent","Typography","color","gutterBottom","variant","start","end","value","duration","separator","Date","toDateString","url","fetchData","country","a","changeableUrl","axios","get","fetchDailyData","modifiedData","map","dailyData","total","date","reportDate","console","log","fetchCountries","countries","name","Chart","useState","setDailyData","useEffect","fetchAPI","lineChart","length","labels","datasets","label","borderColor","fill","backgroundColor","barChart","options","legend","display","title","text","CountryPicker","handleCountryChange","fetchedCountries","setFetchedCountries","FormControl","formControl","NativeSelect","defaultValue","onChange","e","target","i","key","App","state","fetchedData","setState","this","image","src","coronaImages","alt","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e910f96b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__lDHk-\",\"card\":\"Cards_card__3QTkP\",\"infected\":\"Cards_infected__38qJz\",\"recovered\":\"Cards_recovered__3fWNs\",\"deaths\":\"Cards_deaths__DvIrr\"};","import React from 'react'\r\nimport styles from \"./Spinner.css\";\r\nconst Spinner = () => {\r\n     return(\r\n          <div className={styles.Loader}>Loading...</div>\r\n     )\r\n}\r\n\r\nexport default Spinner","import React from \"react\";\r\n\r\nimport { Card, CardContent, Typography, Grid } from \"@material-ui/core\";\r\nimport CountUp from \"react-countup\";\r\n\r\nimport styles from \"./Cards.module.css\";\r\nimport cx from 'classnames';\r\n\r\nimport Spinner from \"../../shared/Spinner/Spinner\";\r\n\r\nconst Cards = ({ data: { confirmed, recovered, deaths, lastUpdate } }) => {\r\n  if (!confirmed) {\r\n    return <Spinner/>;\r\n  }\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      <Grid container spacing={3} justify=\"center\">\r\n        {/* Infected */}\r\n        <Grid item component={Card} xs={12} md={3}  className={cx(styles.card, styles.infected)}>\r\n          <CardContent>\r\n            <Typography color=\"textSecondary\" gutterBottom>\r\n              Infected\r\n            </Typography>\r\n\r\n            <Typography variant=\"h5\">\r\n              <CountUp\r\n                start={0}\r\n                end={confirmed.value}\r\n                duration={2.5}\r\n                separator=\",\"\r\n              />\r\n            </Typography>\r\n\r\n            <Typography color=\"textSecondary\">\r\n              {new Date(lastUpdate).toDateString()}\r\n            </Typography>\r\n\r\n            <Typography variant=\"body2\">\r\n              Number of active case of COVID-19\r\n            </Typography>\r\n          </CardContent>\r\n        </Grid>\r\n\r\n        {/* Recoverd */}\r\n        <Grid item component={Card} xs={12} md={3}  className={cx(styles.card, styles.recovered)}>\r\n\r\n          <CardContent>\r\n            <Typography color=\"textSecondary\" gutterBottom>\r\n              Recovered\r\n            </Typography>\r\n\r\n            <Typography variant=\"h5\">\r\n              <CountUp\r\n                start={0}\r\n                end={recovered.value}\r\n                duration={2.0}\r\n                separator=\",\"\r\n              />\r\n            </Typography>\r\n\r\n            <Typography color=\"textSecondary\">\r\n              {new Date(lastUpdate).toDateString()}\r\n            </Typography>\r\n\r\n            <Typography variant=\"body2\">\r\n              Number of recoveries from COVID-19\r\n            </Typography>\r\n          </CardContent>\r\n        </Grid>\r\n\r\n        {/* Deaths */}\r\n        <Grid item component={Card} xs={12} md={3}  className={cx(styles.card, styles.deaths)}>\r\n\r\n          <CardContent>\r\n            <Typography color=\"textSecondary\" gutterBottom>\r\n              Deaths\r\n            </Typography>\r\n\r\n            <Typography variant=\"h5\">\r\n              <CountUp\r\n                start={0}\r\n                end={deaths.value}\r\n                duration={2.5}\r\n                separator=\",\"\r\n              />\r\n            </Typography>\r\n\r\n            <Typography color=\"textSecondary\">\r\n              {new Date(lastUpdate).toDateString()}\r\n            </Typography>\r\n\r\n            <Typography variant=\"body2\">\r\n              Number of deaths caused by COVID-19\r\n            </Typography>\r\n          </CardContent>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Cards;\r\n","import axios from \"axios\";\r\n\r\nconst url = \"https://covid19.mathdro.id/api\";\r\n\r\nexport const fetchData = async (country) => {\r\n  let changeableUrl = url;\r\n\r\n  if (country) {\r\n    changeableUrl = `${url}/countries/${country}`;\r\n  }\r\n\r\n  try {\r\n    const {\r\n      data: { confirmed, recovered, deaths, lastUpdate },\r\n    } = await axios.get(changeableUrl);\r\n\r\n    return { confirmed, recovered, deaths, lastUpdate };\r\n  } catch (error) {\r\n    return error;\r\n  }\r\n};\r\n\r\nexport const fetchDailyData = async () => {\r\n  try {\r\n    const { data } = await axios.get(`${url}/daily`);\r\n    const modifiedData = data.map((dailyData) => ({\r\n      confirmed: dailyData.confirmed.total,\r\n      deaths: dailyData.deaths.total,\r\n      date: dailyData.reportDate,\r\n    }));\r\n    return modifiedData;\r\n  } catch (error) {\r\n    console.log(\"error\", error);\r\n  }\r\n};\r\n\r\nexport const fetchCountries = async () => {\r\n  try {\r\n    const {\r\n      data: { countries },\r\n    } = await axios.get(`${url}/countries`);\r\n    return countries.map((country) => country.name);\r\n  } catch (error) {\r\n    console.log(\"error\", error);\r\n  }\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nimport { Line, Bar } from \"react-chartjs-2\";\r\n\r\nimport { fetchDailyData } from \"../../api\";\r\n\r\nimport styles from \"./Chart.module.css\";\r\n\r\nconst Chart = ({ data: {confirmed, recovered, deaths}, country }) => {\r\n  const [dailyData, setDailyData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchAPI = async () => {\r\n      setDailyData(await fetchDailyData());\r\n    };\r\n\r\n    fetchAPI();\r\n  }, []);\r\n\r\n  const lineChart = dailyData.length ? (\r\n    <Line\r\n      data={{\r\n        labels: dailyData.map(({ date }) => date),\r\n        datasets: [\r\n          {\r\n            data: dailyData.map(({ confirmed }) => confirmed),\r\n            label: \"Infected\",\r\n            borderColor: \"#3333ff\",\r\n            fill: true,\r\n          },\r\n          {\r\n            data: dailyData.map(({ deaths }) => deaths),\r\n            label: \"Deaths\",\r\n            borderColor: \"#red\",\r\n            backgroundColor: \"rgba(255, 0, 0, 0.5)\",\r\n            fill: true,\r\n          },\r\n        ],\r\n      }}\r\n    />\r\n  ) : null;\r\n\r\n  const barChart = confirmed ? (\r\n    <Bar\r\n      data={{\r\n        labels: [\"Infected\", \"Recovered\", \"Deaths\"],\r\n        datasets: [\r\n          {\r\n            label: \"People\",\r\n            backgroundColor: [\r\n              \"rgba(0, 0 ,255, 0.5)\",\r\n              \"rgba(0, 255 ,0, 0.5)\",\r\n              \"rgba(255, 0 ,0, 0.5)\",\r\n            ],\r\n            data: [confirmed.value, recovered.value, deaths.value]\r\n          },\r\n        ],\r\n      }}\r\n      options={{\r\n        legend: { display: false },\r\n        title: { display: true, text: `Current state in ${country}` },\r\n      }}\r\n    />\r\n  ) : null;\r\n\r\n  return <div className={styles.container}>{country ? barChart : lineChart}</div>;\r\n};\r\n\r\nexport default Chart;\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nimport { NativeSelect, FormControl } from \"@material-ui/core\";\r\n\r\nimport { fetchCountries } from \"../../api\";\r\nimport styles from \"./CountryPicker.module.css\";\r\n\r\nconst CountryPicker = ({handleCountryChange}) => {\r\n  const [fetchedCountries, setFetchedCountries] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchAPI = async () => {\r\n      setFetchedCountries(await fetchCountries());\r\n    };\r\n\r\n    fetchAPI();\r\n  }, [setFetchedCountries]);\r\n\r\n  return (\r\n    <FormControl className={styles.formControl}>\r\n      <NativeSelect defaultValue=\"\" onChange={(e) => handleCountryChange(e.target.value)}>\r\n        <option value=\"\">Global</option>\r\n        {fetchedCountries.map((country, i) => (\r\n          <option key={i} value={country}>\r\n            {country}\r\n          </option>\r\n        ))}\r\n      </NativeSelect>\r\n    </FormControl>\r\n  );\r\n};\r\n\r\nexport default CountryPicker;\r\n","import React, { Component } from \"react\";\r\n\r\nimport { Cards, Chart, CountryPicker } from \"./components\";\r\nimport styles from \"./App.module.css\";\r\nimport { fetchData } from \"./api\";\r\n\r\nimport coronaImages from \"./images/image.png\";\r\nclass App extends Component {\r\n  state = {\r\n    data: {},\r\n    country: \"\",\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const fetchedData = await fetchData();\r\n    this.setState({ data: fetchedData });\r\n  }\r\n\r\n  handleCountryChange = async (country) => {\r\n    const fetchedData = await fetchData(country);\r\n    this.setState({ data: fetchedData, country: country });\r\n    // Fetch the data\r\n    // set the state\r\n  };\r\n\r\n  render() {\r\n    const { data, country } = this.state;\r\n    return (\r\n      <div className={styles.container}>\r\n           <img className={styles.image} src={coronaImages} alt=\"COVID-19\"/>\r\n        <Cards data={data} />\r\n        <CountryPicker handleCountryChange={this.handleCountryChange} />\r\n        <Chart data={data} country={country}/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__2cOcT\",\"image\":\"App_image__2z7pY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__3eNhm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__1j49K\"};","module.exports = __webpack_public_path__ + \"static/media/image.d7265326.png\";"],"sourceRoot":""}